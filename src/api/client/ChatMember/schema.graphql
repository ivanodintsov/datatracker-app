type ChatMemberStatistics {
  text: NFormatNumber
  voice: NFormatNumber
  video_note: NFormatNumber
  video: NFormatNumber
  sticker: NFormatNumber
  pinned: NFormatNumber
  audio: NFormatNumber
  document: NFormatNumber
  photo: NFormatNumber
  reply: NFormatNumber
  forward: NFormatNumber
  edit: NFormatNumber
  total: NFormatNumber
  contact: NFormatNumber
  location: NFormatNumber
  game: NFormatNumber
  venue: NFormatNumber
  invoice: NFormatNumber
  channel_chat_created: NFormatNumber
  supergroup_chat_created: NFormatNumber
  group_chat_created: NFormatNumber
  migrate_to_chat: NFormatNumber
  left_chat_member: NFormatNumber
  new_chat_members: NFormatNumber
  new_chat_photo: NFormatNumber
  hour: Int
}

type ChatMemberHourlyStatistics {
  range: Range
  data: [ChatMemberStatistics]
}

type ChatMemberUser {
  id: Int!
  is_bot: Boolean
  first_name: String
  last_name: String
  username: String
  language_code: String
}

type ChatMemberChat {
  type: String
  title: String
  username: String
  first_name: String
  last_name: String
  photo: ChatPhoto
  description: String
  members_count: Int
}

type ChatMember {
  chat: ChatMemberChat
  user: ChatMemberUser
  until_date: Int
  status: String
  active: Boolean
}

type Query {
  chatMember(chat: Float!, user: Int!): ChatMember
  chatMemberStatistics(chat: Float!, user: Int!): ChatMemberStatistics
  chatMemberHourlyStatistics(chat: Float!, user: Int!): ChatMemberHourlyStatistics
}
