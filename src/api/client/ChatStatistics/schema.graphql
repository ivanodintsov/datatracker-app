type Average {
  daily: Int
  hours: Int
}

type ChatStatistics {
  chat: Float!
  text: Int
  voice: Int
  video_note: Int
  sticker: Int
  video: Int
  audio: Int
  document: Int
  photo: Int
  reply: Int
  forward: Int
  edit: Int
  pinned: Int
  contact: Int
  location: Int
  game: Int
  venue: Int
  invoice: Int
  channel_chat_created: Int
  supergroup_chat_created: Int
  group_chat_created: Int
  migrate_to_chat: Int
  left_chat_member: Int
  new_chat_members: Int
  new_chat_photo: Int
  new_chat_title: Int
  total: Int
  date: Date
  activeDays: Int
  day: Int
  hour: Int
  avg: Average
}

type ChatUsersActivity {
  date: Date!
  users: Int,
  text: Int
}

type ChatFullStatistics {
  chatStatistics: ChatStatistics
  usersStatistics: [Statistics]
  usersActivityStatistics: [ChatUsersActivity]
  hourlyStatistics: [ChatStatistics]
  weekDaysStatistics: [ChatStatistics]
}

type Query {
  chatStatistics(chat: Float!, range: [Date]!, timeZone: String): ChatStatistics
  chatUsersActivity(chat: Float!, range: [Date]!, timeZone: String): [ChatUsersActivity]
  chatQuarterStatistics(chat: Float!, range: [Date]!, timeZone: String): [ChatStatistics]
  chatHourlyStatistics(chat: Float!, range: [Date]!, timeZone: String): [ChatStatistics]
  chatFullStatistics(chat: Float!, range: [Date]!, timeZone: String): ChatFullStatistics
}
