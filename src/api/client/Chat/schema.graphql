type ChatPhoto {
  small_file: String
  big_file: String
}

type AvgHour {
  total: Float
}

type AvgDaily {
  total: Float
}

type Chat {
  id: Float!
  type: String!
  title: String
  username: String
  first_name: String
  last_name: String
  all_members_are_administrators: Boolean
  photo: ChatPhoto
  description: String
  # pinned_message: Message
  sticker_set_name: String
  can_set_sticker_set: Boolean
  members_count: NFormatNumber
  statistics: Statistics
  avg_hourly: AvgHour
  avg_daily: AvgDaily
}

type Statistics {
  text: NFormatNumber
  voice: NFormatNumber
  video_note: NFormatNumber
  video: NFormatNumber
  sticker: NFormatNumber
  pinned: NFormatNumber
  audio: NFormatNumber
  document: NFormatNumber
  photo: NFormatNumber
  reply: NFormatNumber
  forward: NFormatNumber
  edit: NFormatNumber
  total: NFormatNumber
  contact: NFormatNumber
  location: NFormatNumber
  game: NFormatNumber
  venue: NFormatNumber
  invoice: NFormatNumber
  channel_chat_created: NFormatNumber
  supergroup_chat_created: NFormatNumber
  group_chat_created: NFormatNumber
  migrate_to_chat: NFormatNumber
  left_chat_member: NFormatNumber
  new_chat_members: NFormatNumber
  new_chat_photo: NFormatNumber
  activeDays: Int
  status: String
}

type StatisticsK {
  text: String
  voice: String
  video_note: String
  video: String
  sticker: String
  pinned: String
  audio: String
  document: String
  photo: String
  reply: String
  forward: String
  edit: String
  total: String
  contact: String
  location: String
  game: String
  venue: String
  invoice: String
  channel_chat_created: String
  supergroup_chat_created: String
  group_chat_created: String
  migrate_to_chat: String
  left_chat_member: String
  new_chat_members: String
  new_chat_photo: String
}

type Query {
  chat(id: Float!): Chat
  userStatistics(chat: Float!, range: [Date]!, timeZone: String): [Statistics]
}
